getwd()
install.packages("xtable")
d <- load("~/designedmissingnessGit/Results/tables20180509_60_1_high.RData")
high <- d
load("~/designedmissingnessGit/Results/tables20180509_60_1_med.RData")
med <- d
load("~/designedmissingnessGit/Results/tables20180509_60_1_low.RData")
low <- d
library(xtable)
print(xtable(cbind("","","",rbind(low[[1]],med[[1]],high[[1]],low[[2]],med[[2]],high[[2]],low[[3]],med[[3]],high[[3]])),digits= 3),include.rownames=FALSE)
load("~/designedmissingnessGit/Results/tables20180509_60_1_high_hightime1.RData")
high <- d
load("~/designedmissingnessGit/Results/tables20180509_60_1_med_hightime1.RData")
med <- d
load("~/designedmissingnessGit/Results/tables20180509_60_1_low_hightime1.RData")
low <- d
library(xtable)
print(xtable(cbind("","","",rbind(low[[1]],med[[1]],high[[1]],low[[2]],med[[2]],high[[2]],low[[3]],med[[3]],high[[3]])),digits= 3),include.rownames=FALSE)
high <- d
getwd()
getwd(../)
cd ../
d <- load("~/../Results/tables20180509_60_1_high.RData")
d <- load("~/GitHub/designedmissingness//Results/tables20180509_60_1_high.RData")
d
load("~/GitHub/designedmissingness//Results/tables20180509_60_1_high.RData")
load("~/GitHub/designedmissingness//Results/tables20180509_60_1_high.RData")
# Creating dataframe to visualize - one subject's questions for 5 days
split.form <- function(set, nrem = 2, bound = 0){
set[set$Day >= bound, paste0("Q",1:8)] <- t(apply(set[set$Day >= bound,paste0("Q",1:8)], 1, function(x){
ind <- sample(1:8, nrem)
x[ind] <- NA
as.numeric(x)
}))
return(set)
}
wave.des <- function(set, nmiss, ...) { # nmiss is the number of days each person would miss? 11?? Like, miss a fourth of the days?
id <- sample(2:45, size=nmiss)
for (i in 1:nmiss) {
set[set$Day %in% id[i], c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8')] <- NA
}
return(set)
}
cols <- c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8')
fill <- matrix(1, 45, 8)
dat <- data.frame(fill)
colnames(dat) <- cols
dat$Day <- seq.int(nrow(dat))
set.seed(1234)
split.dat <- split.form(dat)[1:8]
#split.dat
library(ggplot2)
library(dplyr)
library(reshape2)
datmelt <- split.dat[1:8] %>% is.na %>% melt
colnames(datmelt) <- c("Day","Question","Missing")
#datmelt$block <- ifelse((datmelt$Question=="Q1")|(datmelt$Question=="Q8"),"X",ifelse((datmelt$Question=="Q2")|(datmelt$Question=="Q3"),"A",ifelse((datmelt$Question=="Q4")|(datmelt$Question=="Q5"),"B",ifelse((datmelt$Question=="Q6")|(datmelt$Question=="Q7"),"C",0))))
datmelt$color <- ifelse(datmelt$Missing == "TRUE", "Missing", "Observed")
#ifelse(datmelt$Missing == "TRUE", "Missing", ifelse(datmelt$block == "X","X",ifelse(datmelt$block == "A","A",ifelse(datmelt$block == "B","B",ifelse(datmelt$block == "C","C","Missing")))))
cols <- c("Missing" = "red", "Observed" = "skyblue3")
splitplot <- ggplot(datmelt, aes(Question, Day, fill=color)) + geom_raster() + scale_fill_manual(values = cols)  + theme(axis.text.x = element_text(angle=45, vjust=0.5),panel.background = element_rect(fill = NA)) + labs(x = "Questions Asked",y = "Day",fill="Block") + scale_y_reverse() + theme(legend.title=element_blank(),legend.position="none")
#+ geom_vline(xintercept=seq(1.5, 7.5, 2), lwd=1, colour="white") + geom_hline(yintercept=seq(1.5, 4.5, 1), lwd=1, colour="white")
split_plot
cols <- c('Q1','Q2','Q3','Q4','Q5','Q6','Q7','Q8')
fill <- matrix(1, 45, 8)
dat <- data.frame(fill)
colnames(dat) <- cols
dat$Day <- seq.int(nrow(dat))
set.seed(1234)
alternate.split.dat <- split.form(dat, bound = 3)[1:8]
#alternate.split.dat
library(ggplot2)
library(dplyr)
library(reshape2)
datmelt <- alternate.split.dat[1:8] %>% is.na %>% melt
colnames(datmelt) <- c("Day","Question","Missing")
#datmelt$block <- ifelse((datmelt$Question=="Q1")|(datmelt$Question=="Q8"),"X",ifelse((datmelt$Question=="Q2")|(datmelt$Question=="Q3"),"A",ifelse((datmelt$Question=="Q4")|(datmelt$Question=="Q5"),"B",ifelse((datmelt$Question=="Q6")|(datmelt$Question=="Q7"),"C",0))))
datmelt$color <- ifelse(datmelt$Missing == "TRUE", "Missing", "Observed")
#ifelse(datmelt$Missing == "TRUE", "Missing", ifelse(datmelt$block == "X","X",ifelse(datmelt$block == "A","A",ifelse(datmelt$block == "B","B",ifelse(datmelt$block == "C","C","Missing")))))
cols <- c("Missing" = "red", "Observed" = "skyblue3")
alternatesplitplot <- ggplot(datmelt, aes(Question, Day, fill=color)) + geom_raster() + scale_fill_manual(values = cols)  + theme(axis.text.x = element_text(angle=45, vjust=0.5),panel.background = element_rect(fill = NA)) + labs(x = "Questions Asked",y = "Day",fill="Block") + scale_y_reverse() + theme(legend.title=element_blank(),legend.position="none")
#+ geom_vline(xintercept=seq(1.5, 7.5, 2), lwd=1, colour="white") + geom_hline(yintercept=seq(1.5, 4.5, 1), lwd=1, colour="white")
set.seed(1234)
wave.dat <- wave.des(dat,11)
#wave.dat
library(ggplot2)
library(dplyr)
library(reshape2)
datmelt <- wave.dat[1:8] %>% is.na %>% melt
colnames(datmelt) <- c("Day","Question","Missing")
#datmelt$block <- ifelse((datmelt$Question=="Q1")|(datmelt$Question=="Q8"),"X",ifelse((datmelt$Question=="Q2")|(datmelt$Question=="Q3"),"A",ifelse((datmelt$Question=="Q4")|(datmelt$Question=="Q5"),"B",ifelse((datmelt$Question=="Q6")|(datmelt$Question=="Q7"),"C",0))))
datmelt$color <- ifelse(datmelt$Missing == "TRUE", "Missing", "Observed")
#ifelse(datmelt$Missing == "TRUE", "Missing", ifelse(datmelt$block == "X","X",ifelse(datmelt$block == "A","A",ifelse(datmelt$block == "B","B",ifelse(datmelt$block == "C","C","Missing")))))
cols <- c("Missing" = "red", "Observed" = "skyblue3")
waveplot <-  ggplot(datmelt, aes(Question, Day, fill=color)) + geom_raster() + scale_fill_manual(values = cols)  + theme(axis.text.x = element_text(angle=45, vjust=0.5),panel.background = element_rect(fill = NA)) + labs(x = "Questions Asked",y = "Day",fill="Block") + scale_y_reverse() + theme(legend.title=element_blank(),legend.position="none")
require(gridExtra)
grid.arrange(splitplot, alternatesplitplot, waveplot, ncol=3)
choose(8,2)
choose(3,2)
choose(5,2)
choose(6,2)
15*5
75*3
require(gridExtra)
grid.arrange(splitplot, alternatesplitplot, waveplot, ncol=3)
library(mice)
library(lme4)
library(mvtnorm)
library(lmerTest)
library(parallel)
#Passing arguments from the command line.
#arguments are no.pid
args=(commandArgs(TRUE))
eval(parse(text=args[[1]]))
print(eval(parse(text=args[[1]])))
for(i in 1:length(args)){
eval(parse(text=args[[i]]))
}
#Settings:
#sampling size: 60 and 120 subjects
#Correlation settings: regular and low (1 and 0.5)
#Missingness amount: low, medium, high
#Wave missingness levels are nmiss = 11, 22, and 33.
#Split form missingness levels are nrem = 2, 4, 6
start <- Sys.time()
no.sim = 1000 # number of simulated datasets
no.imp = 5 # number of imputed datasets
# no.pid <- 60
# corr.scale <- 1
# Install needed packages, if necessary
# install.packages(c('lme4','mvtnorm','lmerTest'))
# Set working directory
#setwd("~/GitHub/designedmissingness/")
#setwd("~/Dropbox/designedmissingnessGit/")
# Read in Daily With Tox CSV data file
#Daily <- read.csv('~/GitHub/designedmissingness/Daily with Tox.csv')
#Daily <- read.csv('Daily with Tox.csv')
Daily <- read.csv('/home/gmatthews1/designedMissingness/Daily with Tox.csv')
# Retain desired variables
names(Daily)[1] <- c('PID')
Daily <- Daily[,c('PID', 'Day', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7'
,'MissedDose'
, 'ZEduc', 'ZIncom45', 'Gender', 'Age', 'ZAlcTox'
,'ZCESDFU', 'ZAUDIT', 'DrinkYN')]
# Impute missing values in new dataset, 'comp'...Daily has 4.74% missing (sum(is.na(Daily))/prod(dim(Daily)))
comp <- complete(mice(Daily, m=1, seed=817236),1)
# Convert Age to data type 'double'
comp$Age <- as.numeric(comp$Age)
# Shift days back 1 day
comp$Day <- comp$Day-1
# Remove the Daily dataset from the environment
rm(Daily)
#comp$Age <- as.numeric(scale(comp$Age)) # why???
#We re-assign drinkYN to be Q7 to match the survey description in the manuscript?
comp$Q1 <- as.factor(comp$Q1)
comp$Q2 <- as.factor(comp$Q2)
comp$Q3 <- as.factor(comp$Q3)
comp$Q4 <- as.factor(comp$Q4)
comp$Q5 <- as.factor(comp$Q5)
comp$Q6 <- as.factor(comp$Q6)
comp$Q8 <- as.integer(comp$Q7)
comp$Q7 <- as.factor(comp$DrinkYN)
comp$MissedDose <- as.factor(comp$MissedDose)
comp$Gender <- as.factor(comp$Gender)
cols.keep <- c('PID', 'Day', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'MissedDose', 'ZEduc', 'ZIncom45', 'Gender', 'Age', 'ZAlcTox', 'ZCESDFU', 'ZAUDIT')
comp <- comp[,cols.keep]
pop.mod <- glmer(MissedDose ~ Q7 + ZAlcTox + Day + (1|PID), data = comp, family=binomial(link=logit))
pop.mod.coeffs <- summary(pop.mod)$coef[,1:2]
pop.mod <- glmer(MissedDose ~ Q7 + ZAlcTox + Day + (1|PID), data = comp, family=binomial(link=logit))
Daily <- read.csv('~/GitHub/designedmissingness/Daily with Tox.csv')
#Daily <- read.csv('Daily with Tox.csv')
#Daily <- read.csv('/home/gmatthews1/designedMissingness/Daily with Tox.csv')
# Retain desired variables
names(Daily)[1] <- c('PID')
Daily <- Daily[,c('PID', 'Day', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7'
,'MissedDose'
, 'ZEduc', 'ZIncom45', 'Gender', 'Age', 'ZAlcTox'
,'ZCESDFU', 'ZAUDIT', 'DrinkYN')]
# Impute missing values in new dataset, 'comp'...Daily has 4.74% missing (sum(is.na(Daily))/prod(dim(Daily)))
comp <- complete(mice(Daily, m=1, seed=817236),1)
# Convert Age to data type 'double'
comp$Age <- as.numeric(comp$Age)
# Shift days back 1 day
comp$Day <- comp$Day-1
# Remove the Daily dataset from the environment
rm(Daily)
#comp$Age <- as.numeric(scale(comp$Age)) # why???
#We re-assign drinkYN to be Q7 to match the survey description in the manuscript?
comp$Q1 <- as.factor(comp$Q1)
comp$Q2 <- as.factor(comp$Q2)
comp$Q3 <- as.factor(comp$Q3)
comp$Q4 <- as.factor(comp$Q4)
comp$Q5 <- as.factor(comp$Q5)
comp$Q6 <- as.factor(comp$Q6)
comp$Q8 <- as.integer(comp$Q7)
comp$Q7 <- as.factor(comp$DrinkYN)
comp$MissedDose <- as.factor(comp$MissedDose)
comp$Gender <- as.factor(comp$Gender)
cols.keep <- c('PID', 'Day', 'Q1', 'Q2', 'Q3', 'Q4', 'Q5', 'Q6', 'Q7', 'Q8', 'MissedDose', 'ZEduc', 'ZIncom45', 'Gender', 'Age', 'ZAlcTox', 'ZCESDFU', 'ZAUDIT')
comp <- comp[,cols.keep]
pop.mod <- glmer(MissedDose ~ Q7 + ZAlcTox + Day + (1|PID), data = comp, family=binomial(link=logit))
pop.mod.coeffs <- summary(pop.mod)$coef[,1:2]
pop.mod.coeffs
c(2,0.5,0.5,1)
-2.28*2
.28*2
.28/2
.63/2
library(kableExtra)
library(dplyr)
load("~/GitHub/designedmissingness/Results/tables20180509_60_1_high_hightime0.RData")
high_8 <- d
load("~/GitHub/designedmissingness/Results/tables20180509_60_1_med_hightime0.RData")
med_8 <- d
load("~/GitHub/designedmissingness/Results/tables20180509_60_1_low_hightime0.RData")
low_8 <- d
c8 <- rbind(low_8[[1]],med_8[[1]],high_8[[1]],low_8[[2]],med_8[[2]],high_8[[2]],low_8[[3]],med_8[[3]],high_8[[3]])
df_8 <- data.frame(Design = rep(c("Split Form","Altered Split Form", "Wave Missingness"), each = 12), Missingness = rep(rep(c("Low","Medium", "High"), each = 4),3), Parameter = rep(c("$\\gamma_0$", "$\\beta_1$", "$\\beta_2$", "$\\beta_3$"),9), Bias = unlist(c8["Bias"]), unlist(c8["Pct Bias"]), MSE = unlist(c8["MSE"]), Coverage = c8["Coverage"], c8["CI Length"], FMI = c8["FMI"])
df_8[,4:9] <- apply(df_8[,4:9], 2, round, digits = 3)
names(df_8) <- c("Design", "Level", "Parameter", "Bias", "Pct Bias", "MSE", "Coverage", "CI Length", "FMI")
row.names(df_8) <- NULL
kable(df_8, escape = FALSE, format ="latex") %>%
collapse_rows(columns = 1:2, latex_hline = "full") %>%
kable_styling(latex_options = "scale_down")
